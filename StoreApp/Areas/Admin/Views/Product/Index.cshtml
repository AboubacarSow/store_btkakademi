
@model ProductListViewModel

@{
    ViewData["Title"] = "Products";
}

<div class="row" >
    <div class="col-md-3 mt-5"> 
        @await Component.InvokeAsync("CategoriesMenu")
         @await Component.InvokeAsync("ProductFilterMenu")
        <div products="" number="3"> </div>
    </div>
    <div class="col-md-9"> 
    
        <h2 class="display-4 mt-2 text-center">  Products  </h2>
        <div class="container d-flex justify-content-end">
            <a class="btn btn-outline-success" asp-action="Create"><i class="fa fa-plus"> </i> Create</a> 
        </div>
        <div class="container mt-3 ">
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Image Url</th>
                        <th> ShowCase Statut </th>
                        <th>Product Name</th>
                        <th>Price </th>
                        <th>Operations</th>
                    </tr>
                </thead>
                    <tbody>
                    @foreach(Product product in Model.Products)
                    {
                        <tr>
                            <td>@product.ProductId</td>
                            <td>
                                <img src="@product.ImageUrl" class="border-light rounded" width=50 />
                            </td>
                            <td> 
                                <div class="form-check form-switch">
                                    <input type="checkbox" disabled class="form-check-input" checked="@product.ShowCase" />
                                </div>
                            </td>
                            <td>@product.ProductName</td>
                            <td>@product.Price.ToString("c")</td>
                            <td>
                                <div class="btn-group">
                                <a class="btn btn-warning" 
                                    data-bs-toggle="tooltip" data-bs-placement="top"
                                    data-bs-title="Edit"asp-action="Update" asp-route-id="@product.ProductId">
                                    <i class="fa fa-edit"></i>
                                    Edit
                                </a>
                                <a class="btn btn-danger" 
                                    data-bs-toggle="tooltip" data-bs-placement="top"data-bs-title="Delete"asp-action="Delete" asp-route-id="@product.ProductId">
                                    <i class="fa fa-trash"></i>
                                    Remove
                                </a>
                                <a class="btn btn-primary" asp-area="" 
                                    data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Search" 
                                asp-controller="Product" asp-action="Get" asp-route-id="@product.ProductId">
                                    <i class="fa fa-search"></i>
                                    Search
                                </a>
                                </div>
                            </td>
                        </tr>   
                    }
                </tbody>    
            </table>
            <div class="d-flex justify-content-center">
               <div page-model="@Model?.Pagination" page-action="Index" page-classes-enabled="true" page-class="btn" 
                 page-class-normal="btn-outline-dark" page-class-selected="btn-primary" class="btn-group"> 
               </div>
            </div>
        </div>
    </div>
</div>
<!-- Section pour rendre actif nos toolstip -->
@section Scripts 
{
     <script>
    // Activer tous les tooltips sur la page
       var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
       var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
          return new bootstrap.Tooltip(tooltipTriggerEl)
       })
    </script>

}